#if 0
# Ive attended the code.plus class (https://code.plus/)
# And I've referred it's codes
# And core parts can be come fully from the class.
#endif

#include <iostream>
using namespace std;
int a[501][501];

// [2] : [0]: x, [1]:y
// [4] : 4 points
int d[][4][2] = {
    // ****
    {{0,0},{0,1},{0,2},{0,3}},
    // *
    // *
    // *
    // *
    {{0,0},{1,0},{2,0},{3,0}},
    // **
    // **
    {{0,0},{1,0},{0,1},{1,1}},
    // *
    // ***
    {{0,0},{1,0},{1,1},{1,2}},
    // **
    // *
    // *
    {{0,0},{1,0},{2,0},{0,1}},
    // ***
    //   *
    {{0,0},{0,1},{0,2},{1,2}},
    //  *
    //  *
    // **
    {{2,0},{0,1},{1,1},{2,1}},
    //   *
    // ***
    {{1,0},{1,1},{1,2},{0,2}},
    // **
    //  *
    //  *
    {{0,0},{0,1},{1,1},{2,1}},
    // ***
    // *
    {{0,0},{1,0},{0,1},{0,2}},
    // *
    // *
    // **
    {{0,0},{1,0},{2,0},{2,1}},
    // **
    //  **
    {{0,0},{0,1},{1,1},{1,2}},
    //  *
    // **
    // *
    {{1,0},{2,0},{0,1},{1,1}},
    // *
    // **
    //  *
    {{0,0},{1,0},{1,1},{2,1}},
    //  **
    // **
    {{1,0},{0,1},{1,1},{0,2}},
    //  *
    // **
    //  *
    {{1,0},{0,1},{1,1},{2,1}},
    //  *
    // ***
    {{1,0},{0,1},{1,1},{1,2}},
    // ***
    //  *
    {{0,0},{0,1},{1,1},{0,2}},
    //  *
    //  **
    //  *
    {{0,0},{1,0},{2,0},{1,1}}
};


#if 0
int dy[][4] = {
    {0, 1, 2, 3}, // ----
    {0, 0, 0, 0}, // |
    {0, 0, 1, 1}, // ㅁ
    {0, 0, 0, 1}, // ㄴ
    {0, 1, 2, 2}, // __|
    {0, 1, 1, 1}, //-|
    {0, 0, 1, 2}, //|-

    {0, 1, 1, 1}, // _|
    {0, 1, 2, 2}, // --|
    {0, 0, 0, 1}, // |-
    {0, 0, 1, 2}, // |___

    {0, 1, 1, 2}, //_--
    {0, 0, 1, 1}, // ||
    {0, 1, 1, 2}, //--__
    {0, 0, 1, 1}, // ||

    {0, 1, 1, 2}, // ㅜ
    {0, 1, 1, 1}, // ㅓ
    {0, 0, 0, 1}, // ㅏ
    {0, 1, 1, 2} // ㅗ
};
int dx[][4] = {
    {0, 0, 0, 0}, // ----
    {0, 1, 2, 3}, // |
    {0, 1, 0, 1}, // ㅁ
    {0, 1, 2, 2}, // ㄴ
    {0, 0, 0, -1},// __|
    {0, 0, 1, 2},//-|
    {1, 0, 0, 0},//|-
    
    {2, 0, 1, 2},// _|
    {0, 0, 0, 1},// --|
    {0, 1, 2, 1},// |-
    {0, 1, 1, 1},//|___

    {0, 0, -1, -1},
    {0, 1, 1, 2},
    {0, 0, 1, 1},
    {1, 2, 0, 1},

    {0, 0, 1, 0},
    {1, 0, 1, 2},
    {0, 1, 2, 1},
    {0, 0, -1, 0}
};
#endif

int n, m;
int main() {
    cin >> n >> m;
    for (int i=0; i<n; i++) {
        for (int j=0; j<m; j++) {
            cin >> a[i][j];
        }
    }
    int sum = 0;
    for (int i=0; i<n; i++) {
        for (int j=0; j<m; j++) {
            for (int k=0; k<19; k++) { // 19
                int tmp = 0;
                int l=0;
                for (l=0; l<4; l++) {
                    int x = i+d[k][l][0];
                    int y = j+d[k][l][1];
                    if (0<= x && x <n && 0<= y && y < m) {
                        tmp += a[x][y];
                        //printf("+a[%d][%d](=%d)\n", x,y,a[x][y]);
                    } else {
                        break;
                    }
                }
                if (l!=4) {
                    continue;
                }
                else {
                    //printf("[%d] tmp: %d\n", k, tmp);
                    if (sum < tmp) {
                        sum = tmp;
                    }
                }
            }
        }
    }
    #if 0
    for (int i=0; i<n; i++) {
        for (int j=0; j<m; j++) {
            for (int k=0; k<sizeof(dy)/sizeof(dy[0]); k++){
                //printf("size: %d\n", sizeof(dy)/sizeof(dy[0]));
                int x0 = i+dx[k][0];
                int y0 = j+dy[k][0];
                int x1 = i+dx[k][1];
                int y1 = j+dy[k][1];
                int x2 = i+dx[k][2];
                int y2 = j+dy[k][2];
                int x3 = i+dx[k][3];
                int y3 = j+dy[k][3];
                if ((0 <= x0 && x0 < n && 0 <= y0 && y0 < m) &&
                    (0 <= x1 && x1 < n && 0 <= y1 && y1 < m) &&
                    (0 <= x2 && x2 < n && 0 <= y2 && y2 < m) &&
                    (0 <= x3 && x3 < n && 0 <= y3 && y3 < m)) {
                        int tmp = a[x0][y0]+a[x1][y1]+a[x2][y2]+a[x3][y3];
                        printf("(%d,%d), (%d,%d), (%d,%d), (%d,%d)\n", x0,y0,x1,y1,x2,y2,x3,y3);
                        printf("tmp: %d\n", tmp);
                        if (sum < tmp) {
                            sum = tmp;
                        } 
                    }
                else {
                    printf("out of range: (%d,%d), (%d,%d), (%d,%d), (%d,%d)\n", x0,y0,x1,y1,x2,y2,x3,y3);
                }
            }
        }
    }
    #endif
    cout << sum << '\n';
    return 0;
}